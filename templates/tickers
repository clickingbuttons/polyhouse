CREATE TABLE {{ .database }}.{{ .table }}{{ if .cluster }}_shard ON CLUSTER {{ .cluster }}{{ end }}
(
  ts                             Date32,
  ticker                         LowCardinality(String),
  name                           LowCardinality(String),
  primary_exchange               LowCardinality(String),
  type                           LowCardinality(String),
  cik                            LowCardinality(String),
  composite_figi                 LowCardinality(String),
  share_class_figi               LowCardinality(String),
  phone_number                   LowCardinality(String),
  description                    LowCardinality(String),
  sic_code                       Nullable(UInt16),
  ticker_root                    LowCardinality(String),
  homepage_url                   LowCardinality(String),
  total_employees                Nullable(UInt32),
  list_date                      Nullable(Int64), -- TODO: make Date32 after https://github.com/ClickHouse/ClickHouse/pull/39425
  share_class_shares_outstanding Nullable(Float64),
  weighted_shares_outstanding    Nullable(Float64),
  address1                       LowCardinality(String),
  address2                       LowCardinality(String),
  city                           LowCardinality(String),
  postal_code                    LowCardinality(String),
  state                          LowCardinality(String)
-- TODO: branding as LowCardinality(Array(UInt8))
)
Engine =
{{ if .cluster }}
ReplicatedReplacingMergeTree(
	'/clickhouse/tables/{shard}/{database}/{{ .table }}',
	'{replica}'
)
{{ else }}
ReplacingMergeTree()
{{ end }}
PARTITION BY toYear(ts)
ORDER BY (ticker, ts);

{{ if .cluster }}
CREATE TABLE {{ .database }}.{{ .table }} ON CLUSTER {{ .cluster }}
AS {{ .database }}.{{ .table }}_shard
ENGINE = Distributed(
	'{cluster}',
	{{ .database }},
	{{ .table }}_shard,
	cityHash64(ticker)
);
{{ end }}
