CREATE TABLE IF NOT EXISTS {{ .database }}.{{ .table }}_data (
ts			DateTime('America/New_York'),
{{ .tradeAggFields }}
)
ENGINE = AggregatingMergeTree()
PARTITION BY toYYYYMM(ts)
ORDER BY (ticker, ts);

CREATE MATERIALIZED VIEW IF NOT EXISTS
{{ .database }}.{{ .table }}_agger
TO {{ .database }}.{{ .table }}_data
AS
SELECT
	toStartOfMinute(ts) AS ts,
	ticker,
	argMinState(price, trades.ts) AS open,
	maxState(price) AS high,
	minState(price) AS low,
	argMaxState(price, trades.ts) AS close,
	sumState(toUInt64(size)) AS volume,
	sumState(price * size) AS liquidity,
	countState() AS count
FROM {{ .database }}.trades
WHERE correction=0 AND NOT hasAny(conditions, {{ .badConditions }}) AND price!=0
GROUP BY
	ticker,
	ts;

CREATE VIEW IF NOT EXISTS {{ .database }}.{{ .table }}
AS
SELECT
	ts,
	ticker,
	argMinMerge(open) AS open,
	maxMerge(high) AS high,
	minMerge(low) AS low,
	argMaxMerge(close) AS close,
	sumMerge(volume) as volume,
	sumMerge(liquidity) as liquidity,
	liquidity / volume as vwap,
	countMerge(count) as count
FROM {{ .database }}.{{ .table }}_data
GROUP BY
	ticker,
	ts;
