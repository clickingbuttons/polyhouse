CREATE TABLE {{ .database }}.{{ .table }}{{ if .cluster }}_shard ON CLUSTER {{ .cluster }}{{ end }}
(
  ts     DateTime('America/New_York'),
  {{ .aggFields }}
)
ENGINE = {{ if .cluster }}
ReplicatedReplacingMergeTree(
	'/clickhouse/tables/{shard}/{database}/{{ .table }}',
	'{replica}'
)
{{ else }}
ReplacingMergeTree()
{{ end }}
PARTITION BY toYYYYMMDD(ts)
ORDER BY (ticker, ts);

{{ if .cluster }}
CREATE TABLE {{ .database }}.{{ .table }} ON CLUSTER {{ .cluster }}
AS {{ .database }}.{{ .table }}_shard
ENGINE = Distributed(
	'{cluster}',
	{{ .database }},
	{{ .table }}_shard,
	cityHash64(ticker)
);
{{ end }}

CREATE MATERIALIZED VIEW {{ .database }}.{{ .table }}_agger
TO {{ .database }}.{{ .table }}
AS
SELECT
  toStartOfMinute(ts) AS ts,
  ticker,
  if((anyIf(price, NOT hasAny(conditions, {{ .consMaybeLastConditions }})) as o)=0, any(price), o) AS open,
  max(price) AS high,
  min(price) AS low,
  if((anyLastIf(price, NOT hasAny(conditions, {{ .consMaybeLastConditions }})) as c)=0, anyLast(price), c) AS close,
  sumIf(size, update_volume) AS volume,
  sumIf(price * size, update_volume) / volume AS vwap,
  count() AS count
FROM {{ .database }}.trades
WHERE correction = 0 AND update
GROUP BY
  ticker,
  ts;
