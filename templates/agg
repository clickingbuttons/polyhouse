CREATE TABLE {{ .database }}.{{ .aggName }} (
	ts     {{ .tsType }},
	{{ .aggFields }}
)
ENGINE = AggregatingMergeTree
PARTITION BY {{ .partitionFn }}(ts)
ORDER BY (ticker, ts);

CREATE MATERIALIZED VIEW {{ .database }}.{{ .aggName }}_agger
TO {{ .database }}.{{ .aggName }} AS
SELECT * FROM (
	SELECT
		ticker,
		toStartOfInterval(ts, INTERVAL {{ .interval }}) AS ts,
		any(price) AS open,
		max(price) AS high,
		min(price) AS low,
		anyLast(price) AS close,
		sumIf(size, {{ .volWhere }}) AS volume,
		sumIf(price * size, {{ .volWhere }}) / volume AS vwap,
		count() AS count
	FROM {{ .database }}.trades
	WHERE correction = 0 AND {{ .where }}
	GROUP BY
		ticker,
		ts
)
WHERE open != 0 AND high != 0 AND low != 0 AND close != 0;
